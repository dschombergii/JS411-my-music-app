[{"/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/index.js":"1","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/App.js":"2","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/reportWebVitals.js":"3","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/MusicAppBar.js":"4","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/SignIn.js":"5","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/MusicDashboard.js":"6","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/Notifications.js":"7","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/Home.js":"8"},{"size":500,"mtime":1611625404659,"results":"9","hashOfConfig":"10"},{"size":1310,"mtime":1611617327358,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611452533640,"results":"12","hashOfConfig":"10"},{"size":1196,"mtime":1611614838497,"results":"13","hashOfConfig":"10"},{"size":2223,"mtime":1611604516488,"results":"14","hashOfConfig":"10"},{"size":4125,"mtime":1611618173984,"results":"15","hashOfConfig":"10"},{"size":1059,"mtime":1611618428578,"results":"16","hashOfConfig":"10"},{"size":0,"mtime":1611624825257,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"194wr3u",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/index.js",[],"/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/App.js",["39","40"],"import React, { useEffect, useState } from 'react'\nimport './App.css';\n\nimport MusicAppBar from './components/MusicAppBar'\nimport SignIn from './components/SignIn'\nimport MusicDashboard from './components/MusicDashboard'\nimport Notifications from './components/Notifications';\n\nexport default function App() {\n\n  const [state, setState] = useState({\n    loggedIn: false,\n    online: true,\n    masterVolume: 80,\n    quality: 2,\n  })\n\n\n  const handleLogin = () => {\n    setState({ ...state, loggedIn: state.loggedIn ? false : true })\n  }\n\n  const handleOnline = (event) => {\n    setState({ ...state, [event.target.name]: state.online ? false : true });\n  };\n\n  const handleVolume = (event, newValue) => {\n    setState({ ...state, masterVolume: newValue });\n  }\n\n  const handleQuality = (event, value) => {\n    setState({ ...state, quality: event.target.value })\n  }\n\n\n\n  return (\n    <div>\n\n      <MusicAppBar\n        state={state}\n        loggedIn={state.loggedIn}\n        handleLogin={handleLogin} />\n      {state.loggedIn ?\n        <div>\n          <MusicDashboard\n            state={state}\n            handleOnline={handleOnline}\n            handleVolume={handleVolume}\n            handleQuality={handleQuality} />\n        </div> :\n        <SignIn\n          handleLogin={handleLogin} />}\n\n    </div>\n  );\n}\n\n\n",["41","42"],"/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/reportWebVitals.js",[],"/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/MusicAppBar.js",["43","44"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n    button: {\n        marginLeft: 20,\n    }\n}));\n\nexport default function MusicAppBar(props) {\n\n    const classes = useStyles();\n    const { state, loggedIn, handleLogin } = props\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        My Music App\n                    </Typography>\n\n                    {loggedIn && <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleLogin}\n                        className={classes.button}\n                    >Sign Out</Button>}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/SignIn.js",[],"/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/MusicDashboard.js",["45"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Switch from '@material-ui/core/Switch';\nimport Slider from '@material-ui/core/Slider';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Notifications from './Notifications'\n\nconst useStyles = makeStyles((theme) => ({\n    page: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    card: {\n        margin: \"auto\",\n        marginBottom: 10,\n        width: 250,\n        height: 200,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    cardHeading: {\n        fontWeight: \"bold\"\n    }\n}));\n\nexport default function MusicDashboard(props) {\n\n    const { state, handleOnline, handleVolume, handleQuality } = props\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"md\">\n            <h1 style={{ color: \"gray\" }}>Welcome User!</h1>\n            <div className={classes.page}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h1\" className={classes.cardHeading}>Online Mode</Typography>\n                        <Typography>\n                            Is this application connected to the internet?</Typography><br /><br /><br />\n                        <Switch\n                            className={classes.switch}\n                            checked={state.online}\n                            onChange={handleOnline}\n                            name=\"online\"\n                            color=\"secondary\"\n                        />\n                    </CardContent>\n                </Card>\n\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h1\" className={classes.cardHeading}>Master Volume</Typography>\n                        <Typography>\n                            Overrides all other sound settings in this application\n                        </Typography><br /><br /><br />\n                        <Slider\n                            defaultValue={state.masterVolume}\n                            aria-labelledby=\"discrete-slider\"\n                            valueLabelDisplay=\"auto\"\n                            step={10}\n                            marks\n                            min={0}\n                            max={100}\n                            name=\"masterVolume\"\n                            value={state.masterVolume}\n                            onChange={handleVolume}\n                        />\n                    </CardContent>\n                </Card>\n\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h2\" className={classes.cardHeading}>Sound Quality</Typography>\n                        <Typography>\n                            Manually control the music quality in the event of a poor connection\n                        </Typography><br /><br />\n                        <Select\n                            label=\"Age\"\n                            id=\"demo-simple-select\"\n                            value={state.quality}\n                            onChange={handleQuality}\n                        >\n                            <MenuItem value={1}>Low</MenuItem>\n                            <MenuItem value={2}>Normal</MenuItem>\n                            <MenuItem value={3}>High</MenuItem>\n                        </Select>\n                    </CardContent>\n                </Card>\n\n            </div>\n            <Notifications state={state} />\n        </Container>\n    )\n}","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/components/Notifications.js",["46"],"import React, { useEffect } from 'react'\nimport Alert from '@material-ui/lab/Alert'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    alert: {\n        marginBottom: \"10px\"\n    }\n}));\n\nexport default function Notifications(props) {\n\n    const { state } = props\n    const classes = useStyles()\n\n    return (\n        <div>\n            <h3>System Notifications:</h3>\n            {state.online === false &&\n                < Alert severity=\"warning\" className={classes.alert}>\n                    Your application is offline. You won't be able to share or stream music to other devices.</Alert>}\n            {state.masterVolume > 80 &&\n                < Alert severity=\"info\" className={classes.alert}>\n                    Listening to music at a high volume could cause long-term hearing loss.</Alert>}\n            {state.quality === 1 &&\n                < Alert severity=\"warning\" className={classes.alert}>Music quality is degraded. Increase quality if your connection allows it.</Alert>}\n        </div >\n    )\n}\n","/Users/darrylschombergii/Documents/Austin Coding Academy/my-music-app/src/Home.js",[],{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":21},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"47","severity":1,"message":"56","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"57","line":23,"column":13,"nodeType":"49","messageId":"50","endLine":23,"endColumn":18},{"ruleId":"47","severity":1,"message":"56","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":26},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Notifications' is defined but never used.","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"'useState' is defined but never used.","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]